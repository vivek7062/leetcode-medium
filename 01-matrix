// Question - https://leetcode.com/problems/01-matrix/
// Answer in cpp


class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int row = mat.size(), col = mat[0].size();
        vector<vector<int>> ans(row,vector(col,-1));
        vector<vector<int>> dir = {{1,0},{0,1},{-1,0},{0,-1}};
        queue<pair<int,int>> que;
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(mat[i][j]==0){
                    ans[i][j] = 0;
                    que.push({i,j});
                }
            }
        }
        while(!que.empty()){
            int i= que.front().first;
            int j= que.front().second;
            que.pop();
            for(int k=0;k<dir.size();k++){
                int newI = i+dir[k][0];
                int newJ = j+dir[k][1];
                if(newI<0 || newJ<0 || newI>=row || newJ>=col || ans[newI][newJ]!=-1) continue;
                ans[newI][newJ] = ans[i][j]+1;
                que.push({newI,newJ});
            }
        }
        return ans;
    }
};
