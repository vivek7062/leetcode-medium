// Question - https://leetcode.com/problems/basic-calculator-ii/
// Answer in cpp


class Solution {
public:
    int calculate(string s) {
        int temp,index=0,ans=0,indexSign=0,pos;
        vector<int> signs,num;
        for(char c: s){
            if(c=='+' || c=='*' || c== '-' || c=='/'){
                if(c=='+'){
                    signs.push_back(1);
                } else if(c=='*'){
                    signs.push_back(2);
                } else if(c=='-'){
                    signs.push_back(3);
                } else if(c=='/'){
                    signs.push_back(4);
                }
                if(indexSign>0 && signs[indexSign-1]%2==0){
                    pos=indexSign-1;
                    if(signs[pos]==2){
                    num[pos] *=num[pos+1];
                    } else {
                        num[pos] /=num[pos+1];
                    }
                    num.erase(num.begin()+pos+1,num.begin()+pos+2);
                    signs.erase(signs.begin()+pos,signs.begin()+pos+1);
                    indexSign--;
                    index--;
                }
                indexSign++;
                index++;
            } else{
                temp = c-48;
                if(temp>=0 && temp<=9){
                    if(num.size()<=index){
                        num.push_back(temp);
                    } else{
                        num[index] = num[index]*10 +temp;
                    }
                }
                
            }
            
        }
        if(signs.size()==0) return num[0];
        if(signs[signs.size()-1]%2==0){
            pos=signs.size()-1;
            if(signs[pos]==2){
                num[pos] *=num[pos+1];
                } else {
                    num[pos] /=num[pos+1];
                }
            num.erase(num.begin()+pos+1,num.begin()+pos+2);
            signs.erase(signs.begin()+pos,signs.begin()+pos+1);
        }
  
        ans=num[0];
        
        for(int i=0;i<signs.size();i++){
                 if(signs[i]==1){
                   ans += num[i+1];
                } else {
                   ans -= num[i+1];
                }
        }
        
        return ans;
    }
};
