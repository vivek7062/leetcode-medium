//Question - https://leetcode.com/problems/binary-tree-level-order-traversal/
//Answer in cpp
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode*> que;
        vector<int> temp1;
        if(root==NULL){
            return ans;
        }
        
        que.push(root);
        que.push(NULL);
        
        
        while(!que.empty()){
            TreeNode* temp =que.front();
            que.pop();
            
            if(temp==NULL){
                if(que.empty()){
                    ans.push_back(temp1);
                break;
                } else {
                    cout<<endl;
                    ans.push_back(temp1);
                    temp1.clear();
                    que.push(NULL);
                    continue;
                }
                
            } else{
                
                temp1.push_back(temp->val);
                cout<<temp->val<<" ";
                
                if(temp->left!=NULL){
                    que.push(temp->left);
                }
                
                if(temp->right!=NULL){
                    que.push(temp->right);
                }
            }
            
        }
        
        
        return ans;
    }
    
};
