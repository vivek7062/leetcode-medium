// Question - https://leetcode.com/problems/combinations/
// Answer in cpp


Code
class Solution {
    vector<vector<int>> ans;
public:
    vector<vector<int>> combine(int n, int k) {
        vector<int> nums,temp;
        for(int i=1;i<=n;i++) nums.push_back(i);
        dfs(nums,0,n-1,temp,k);
        return ans;
    }
    void dfs(vector<int> &nums,int index,int len,vector<int> &temp,int k){
        if(k==0) ans.push_back(temp);
        if(k==0 || index>len) return;
        temp.push_back(nums[index]);
        dfs(nums,index+1,len, temp,k-1);
        temp.pop_back();
        dfs(nums,index+1,len, temp,k);
    }
};
