//Questions -> https://leetcode.com/problems/convert-bst-to-greater-tree/
//Answer in cpp


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* convertBST(TreeNode* root) {
        
        int current=INT_MIN;
        return convert(root,current);
    }
    
    TreeNode* convert(TreeNode * root, int & current){
        if(root==NULL){
            return NULL;
        }
        convert(root->right,current);
        if(current==INT_MIN){
            current=root->val;
        } else{
            current+=root->val;
            root->val= current;
            
        }
        convert(root->left,current);
        
        return root;
    }
    
};

      
