//Question - https://leetcode.com/problems/delete-node-in-a-bst/
//Answer in cpp

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if( !root ) return NULL;
        else if(root->left==NULL && root->right==NULL){
            if(root->val==key){
                return NULL;
            } else{
                return root;
            }
        }
        
        return deleteKey(root,key);
    }
    
     TreeNode* deleteKey(TreeNode* root, int key){
        if(!root) return root;
        
        if(key<root->val){
            root->left = deleteKey(root->left,key);
        } else if(key>root->val){
            root->right= deleteKey(root->right,key);
        } else{
            if(root->left==NULL){
                return root->right;
            } else if(root->right==NULL){
                return root->left;
            } else{
                root->val = minVal(root->right);
                root->right = deleteKey(root->right,root->val);
            }
        }
         
         return root;
    }
    
    int minVal(TreeNode* root){
        int min=0;
        
        while(root){
            min=root->val;
            root=root->left;
        }
        return min;
    }
};
