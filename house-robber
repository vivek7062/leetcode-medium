// Question - https://leetcode.com/problems/house-robber/
// Answer in cpp


Complexity
Time complexity:
O(N)

Space complexity:
O(N)

Code
class Solution {
    vector<int> dp;
public:
    int rob(vector<int>& nums) {
        int len = nums.size();
        dp = vector(nums.size()+1,-1);
        return dfs(nums,0,len,0);
    }
    int dfs(vector<int>& nums,int index, int len, int curr){
        if(index>=len) return 0;
        if(dp[index]!=-1) return dp[index];
        int x=nums[index]+dfs(nums,index+2,len,curr+nums[index]);
        return dp[index]=max(x,dfs(nums,index+1,len,curr));
    }
};
