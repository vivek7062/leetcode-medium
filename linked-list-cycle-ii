// Question - https://leetcode.com/problems/linked-list-cycle-ii/
// Answer in cpp


class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head || !head->next) return NULL;
        ListNode *slow = head;
        ListNode *fast = head;
        int flag=0;
        
        while(fast && fast->next){
            slow = slow->next;
            fast = fast->next->next;
            if(slow==fast) break;
        }
        if(!fast || !fast->next) return NULL;
        fast=head;
        while(slow!=fast){
            slow = slow->next;
            fast=fast->next;
        }
        
        return fast;
    }
};
