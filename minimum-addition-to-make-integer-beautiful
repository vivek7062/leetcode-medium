// Question - https://leetcode.com/problems/minimum-addition-to-make-integer-beautiful/
// Answer in cpp


Approach
We will make number last digit 0 by adding 10-last non zero digit until number sum not become less than equal to target and will store adding digit in another array and construct number from that array and return.

Complexity
Time complexity:
O(n)

Space complexity:
O(n)

Code
class Solution {
public:
    long long makeIntegerBeautiful(long long n, int target) {
        long long ans=0;
        int count=0,i;
        vector<int> temp,temp1;
        long long prev=n;
        while(n){
            temp.insert(temp.begin(),n%10);
            n/=10;
        }
        i=temp.size()-1;
        while(true){
            prev= accumulate(temp.begin(),temp.end(),0);         
            if(prev<=target) break;
            int flag=0; 
            if(temp[i]==0){
                temp1.push_back(0);
                i--;
                continue;
            }    
            temp1.push_back(10-temp[i]);
            temp[i]=0;
            if(i!=0) temp[i-1]+=1;
            else temp.insert(temp.begin(),1);
            i--;
        }
        count=0;
        for(int i=0;i<temp1.size();i++){
            ans+=temp1[i]*pow(10,count++);
        }
        return ans;
    }
};
