// Question - https://leetcode.com/problems/minimum-average-difference/
// Answer in cpp


Complexity
Time complexity:
O(N)

Space complexity:
O(N)

Code
class Solution {
public:
    int minimumAverageDifference(vector<int>& vec) {
        vector<long long> nums;
        nums.push_back(vec[0]);
        int maxVal =INT_MAX,ans=0;
        int len = vec.size(),avg,sub;
        for(int i=1;i<len;i++) nums.push_back(nums[i-1]+vec[i]);
        for(auto& val:nums) cout<<val<<endl;
        for(int i=0;i<len;i++){
            sub = i!=len-1?((nums[len-1]-nums[i])/(len-i-1)):0;
            avg = abs((nums[i]/(i+1))- sub);
            if(avg<maxVal){
                maxVal=avg;
                ans=i;
            }
        }

        return ans;
    }
};
