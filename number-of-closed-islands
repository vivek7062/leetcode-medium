// Question - https://leetcode.com/problems/number-of-closed-islands/
// Answer in cpp




class Solution {
public:
    int closedIsland(vector<vector<int>>& grid) {
        int res=0;
        int row = grid.size(), col = grid[0].size();
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(i==0 || j==0 || i== row-1 || j==col-1){
                    if(grid[i][j]==0){
                        grid[i][j] = -2;
                    }
                }
                else if(grid[i][j]==0){
                    bool ans=true;
                    dfs(grid,i,j,row,col,ans);
                    if(ans) res++;
                }
            }
        }
        return res;
    }
    void dfs(vector<vector<int>>& grid,int i,int j, int row, int col,bool& ans){
        if(i<0 || j<0 || i>=row || j>=col || grid[i][j]==1 || grid[i][j]==-1) return ;
        
            if(i==0 || j==0 || i==row-1 || j==col-1 ){
                ans=false;
            }
            grid[i][j]=-1;
            dfs(grid,i+1,j,row,col,ans);
            dfs(grid,i-1,j,row,col,ans);
            dfs(grid,i,j+1,row,col,ans);
            dfs(grid,i,j-1,row,col,ans);
        
    }
};
