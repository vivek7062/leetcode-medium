// Question - https://leetcode.com/problems/single-number-iii/
// Answer in cpp


class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
       int xor1 = 0, firstNumber = 0, i;
        for(int n : nums) xor1 ^= n;      // Xor all elements
        for(i= 0; i < 32; i++)       // finding the lowest set bit in Xor1
            if(xor1 & 1 << i) break;
        
        for(int num : nums)              // Xor-ing all elements having ith bit set
            if(num & 1 << i) 
                firstNumber ^=num;
				
        return {firstNumber,firstNumber^xor1};   
    }
};
