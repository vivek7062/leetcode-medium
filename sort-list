// https://leetcode.com/problems/sort-list/
// Answer in cpp


class Solution {
public:
    ListNode* sortList(ListNode* head) {
        if(head==NULL || head->next==NULL) return head;
        
        ListNode* slow = head;
        ListNode* fast = head;
        ListNode* temp = NULL;
        
        while(fast!=NULL && fast->next!=NULL){
            temp = slow;
            slow = slow->next;
            fast = fast->next->next;
        }
        
        temp->next=NULL;
        
        
         ListNode* l1 = sortList(head);
         ListNode* l2 = sortList(slow);
        
        return mergerList(l1,l2);
        
    }
    
    ListNode* mergerList(ListNode* l1, ListNode* l2 ){
        
        ListNode* temp = new ListNode(0);
        ListNode* curr = temp;
        
        while(l1!=NULL && l2!=NULL){
            if(l1->val<=l2->val){
                curr->next = l1;
                l1=l1->next;
                
            } else{
                curr->next = l2;
                l2=l2->next;
            }
            
            curr=curr->next;
        }
        
        while(l1){
                 curr->next = l1;
                l1=l1->next;
                curr=curr->next;
            }
        while(l2){
                 curr->next = l2;
                l2=l2->next;
                curr=curr->next;
            }
        
        return temp->next;
    }
};
