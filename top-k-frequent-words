// Question - https://leetcode.com/problems/top-k-frequent-words/
// Answer in cpp


class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        vector<string> ans;
        map<string,int> mp;
        vector<pair<int,string>> vec;
        
        for(auto& str:words){
            mp[str]++;
        }
        
        for(auto& m:mp){
            vec.push_back({m.second,m.first});
        }
        sort(vec.begin(),vec.end(),sortWithFreq);
        for(int i=0;i<k;i++){
            ans.push_back(vec[i].second);
        }
        
        return ans;
    }
   static bool sortWithFreq(const pair<int,string> &p1,const pair<int,string> &p2){
       return p1.first==p2.first?p1.second<p2.second:p1.first>p2.first;
   }
};
